---
- name: rabbitmq_config | checking if rabbitmqadmin is installed
  ansible.builtin.stat:
    path: /usr/sbin/rabbitmqadmin
  register: rabbitmqadmin_check

- name: rabbit_config | Installing rabbitMQ admin
  ansible.builtin.get_url:
    url: http://guest:guest@localhost:15672/cli/rabbitmqadmin
    dest: /usr/sbin/rabbitmqadmin
    mode: u=rwx,g=rw,o=rw
  become: true
  notify: restart rabbitmq-server
  when: not rabbitmqadmin_check['stat']['exists']

- name: rabbitmq_config | creating exchange(s)
  ansible.builtin.command: rabbitmqadmin declare exchange name={{ item['exchange_name'] }} type={{ item['type'] }} --vhost={{ item['vhost'] | default('/') }}
  run_once: true
  delegate_to: "{{ rabbitmq_master }}"
  become: true
  with_items: "{{ rabbitmq_config }}"
  when: item['exchange_name'] is defined

- name: rabbitmq_config | creating queue(s)
  ansible.builtin.command: rabbitmqadmin declare queue name={{ item['queue_name'] }} durable={{ item['durable']|lower }} --vhost={{ item['vhost'] | default('/') }} queue_type={{ item['queue_type'] | default('classic') }}
  run_once: true
  delegate_to: "{{ rabbitmq_master }}"
  become: true
  when:
    - item['queue_name'] is defined
  with_items: "{{ rabbitmq_config }}"

- include: rabbitmq_ha_config.yml
  when: rabbitmq_config_ha

- name: rabbitmq_config | creating binding(s)
  ansible.builtin.command: rabbitmqadmin declare binding source={{ item['exchange_name'] }} destination_type="queue" destination={{ item['queue_name'] }} routing_key={{ item['routing_key'] }} --vhost={{ item['vhost'] | default('/') }} # noqa 204
  run_once: true
  delegate_to: "{{ rabbitmq_master }}"
  become: true
  with_items: "{{ rabbitmq_config }}"
  when: item['exchange_name'] is defined and item['queue_name'] is defined
